import matplotlib.pyplot as plt
import numpy as np

plt.style.use('ggplot')


def path():
    plt.xlim(0, -4000)
    plt.ylim(-4000, 0)

    x = [-1370, -50, -350, -2312, -400, -1929, -902]
    y = [-3650, -2693, -1656, -3950, -3600, -2400, -2768]
    area = 250
    plt.scatter(x, y, s=area, color='green')

    plt.xlim(0, -4000)
    plt.ylim(-4000, 0)

    x = [-3600, -2630, -3950, -3650, -1688, -2071, -3098]
    y = [-400, -350, -1307, -2344, -50, -1600, -1232]
    area = 250
    plt.scatter(x, y, s=area, color='red')

    map_size = 4000
    waypoints_path = []
    waypoints_path.append([100, map_size - 100])
    waypoints_path.append([200, map_size * 0.75])
    waypoints_path.append([200, map_size * 0.5])
    waypoints_path.append([200, map_size * 0.25])
    waypoints_path.append([200, 200])
    waypoints_path.append([map_size * 0.25, 200])
    waypoints_path.append([map_size * 0.5, 200])
    waypoints_path.append([map_size * 0.75, 190])
    waypoints_path.append([map_size - 200, 200])

    x, y = [], []
    for waypoint in waypoints_path:
        x.append(-waypoint[0])
        y.append(-waypoint[1])
    plt.scatter(x, y, color='blue')

    waypoints_path = []
    waypoints_path.append([100, map_size - 100])
    waypoints_path.append([map_size * 0.25, map_size - 200])
    waypoints_path.append([map_size * 0.5, map_size - 200])
    waypoints_path.append([map_size * 0.75, map_size - 200])
    waypoints_path.append([map_size - 200, map_size - 200])
    waypoints_path.append([map_size - 200, map_size * 0.75])
    waypoints_path.append([map_size - 200, map_size * 0.5])
    waypoints_path.append([map_size - 200, map_size * 0.25])
    waypoints_path.append([map_size - 200, 200])

    x, y = [], []
    for waypoint in waypoints_path:
        x.append(-waypoint[0])
        y.append(-waypoint[1])
    plt.scatter(x, y, color='orange')

    waypoints_path = []
    waypoints_path.append([100, map_size - 100])
    waypoints_path.append([200, map_size - 800])
    waypoints_path.append([1000, map_size - 800])
    waypoints_path.append([1500, map_size - 1500])
    waypoints_path.append([map_size * 0.5, map_size * 0.5])
    waypoints_path.append([map_size - 1500, map_size - 2500])
    waypoints_path.append([map_size * 0.75, map_size * 0.25])
    waypoints_path.append([map_size - 500, map_size - 3500])

    x, y = [], []
    for waypoint in waypoints_path:
        x.append(-waypoint[0])
        y.append(-waypoint[1])
    plt.scatter(x, y, color='black')

    plt.show()


def grid_generator():
    plt.xlim(0, -4000)
    plt.ylim(-4000, 0)

    start = [-200, -200]
    finish = [-1000, -600]
    area = np.pi * (3.5 ** 2)

    grid_s = [-1, -500, -500, -1]
    grid_f = [-1300, -1300, -300, -300]

    net_2D = [
        [1, 320], [1, 355], [1, 390], [1, 425], [1, 460], [1, 495], [1, 530], [1, 565], [1, 600], [1, 635], [1, 670],
        [1, 705], [1, 740], [1, 775], [1, 810], [1, 845], [1, 880], [1, 915], [1, 950], [1, 985], [1, 1020], [1, 1055],
        [1, 1090], [1, 1125], [1, 1160], [1, 1195], [1, 1230], [1, 1265], [36, 320], [36, 355], [36, 390], [36, 425],
        [36, 460], [36, 495], [36, 530], [36, 565], [36, 600], [36, 635], [36, 670], [36, 705], [36, 740], [36, 775],
        [36, 810], [36, 845], [36, 880], [36, 915], [36, 950], [36, 985], [36, 1020], [36, 1055], [36, 1090],
        [36, 1125], [36, 1160], [36, 1195], [36, 1230], [36, 1265], [71, 320], [71, 355], [71, 390], [71, 425],
        [71, 460], [71, 495], [71, 530], [71, 565], [71, 600], [71, 635], [71, 670], [71, 705], [71, 740], [71, 775],
        [71, 810], [71, 845], [71, 880], [71, 915], [71, 950], [71, 985], [71, 1020], [71, 1055], [71, 1090],
        [71, 1125], [71, 1160], [71, 1195], [71, 1230], [71, 1265], [106, 320], [106, 355], [106, 390], [106, 425],
        [106, 460], [106, 495], [106, 530], [106, 565], [106, 600], [106, 635], [106, 670], [106, 705], [106, 740],
        [106, 775], [106, 810], [106, 845], [106, 880], [106, 915], [106, 950], [106, 985], [106, 1020], [106, 1055],
        [106, 1090], [106, 1125], [106, 1160], [106, 1195], [106, 1230], [106, 1265], [141, 320], [141, 355],
        [141, 390], [141, 425], [141, 460], [141, 495], [141, 530], [141, 565], [141, 600], [141, 635], [141, 670],
        [141, 705], [141, 740], [141, 775], [141, 810], [141, 845], [141, 880], [141, 915], [141, 950], [141, 985],
        [141, 1020], [141, 1055], [141, 1090], [141, 1125], [141, 1160], [141, 1195], [141, 1230], [141, 1265],
        [176, 320], [176, 355], [176, 390], [176, 425], [176, 460], [176, 495], [176, 530], [176, 565], [176, 600],
        [176, 635], [176, 670], [176, 705], [176, 740], [176, 775], [176, 810], [176, 845], [176, 880], [176, 915],
        [176, 950], [176, 985], [176, 1020], [176, 1055], [176, 1090], [176, 1125], [176, 1160], [176, 1195],
        [176, 1230], [176, 1265], [211, 320], [211, 355], [211, 390], [211, 425], [211, 460], [211, 495], [211, 530],
        [211, 565], [211, 600], [211, 635], [211, 670], [211, 705], [211, 740], [211, 775], [211, 810], [211, 845],
        [211, 880], [211, 915], [211, 950], [211, 985], [211, 1020], [211, 1055], [211, 1090], [211, 1125], [211, 1160],
        [211, 1195], [211, 1230], [211, 1265], [246, 320], [246, 355], [246, 390], [246, 425], [246, 460], [246, 495],
        [246, 530], [246, 565], [246, 600], [246, 635], [246, 670], [246, 705], [246, 740], [246, 775], [246, 810],
        [246, 845], [246, 880], [246, 915], [246, 950], [246, 985], [246, 1020], [246, 1055], [246, 1090], [246, 1125],
        [246, 1160], [246, 1195], [246, 1230], [246, 1265], [281, 320], [281, 355], [281, 390], [281, 425], [281, 460],
        [281, 495], [281, 530], [281, 565], [281, 600], [281, 635], [281, 670], [281, 705], [281, 740], [281, 775],
        [281, 810], [281, 845], [281, 880], [281, 915], [281, 950], [281, 985], [281, 1020], [281, 1055], [281, 1090],
        [281, 1125], [281, 1160], [281, 1195], [281, 1230], [281, 1265], [316, 320], [316, 355], [316, 390], [316, 425],
        [316, 460], [316, 495], [316, 530], [316, 565], [316, 600], [316, 635], [316, 670], [316, 705], [316, 740],
        [316, 775], [316, 810], [316, 845], [316, 880], [316, 915], [316, 950], [316, 985], [316, 1020], [316, 1055],
        [316, 1090], [316, 1125], [316, 1160], [316, 1195], [316, 1230], [316, 1265], [351, 320], [351, 355],
        [351, 390], [351, 425], [351, 460], [351, 495], [351, 530], [351, 565], [351, 600], [351, 635], [351, 670],
        [351, 705], [351, 740], [351, 775], [351, 810], [351, 845], [351, 880], [351, 915], [351, 950], [351, 985],
        [351, 1020], [351, 1055], [351, 1090], [351, 1125], [351, 1160], [351, 1195], [351, 1230], [351, 1265],
        [386, 320], [386, 355], [386, 390], [386, 425], [386, 460], [386, 495], [386, 530], [386, 565], [386, 600],
        [386, 635], [386, 670], [386, 705], [386, 740], [386, 775], [386, 810], [386, 845], [386, 880], [386, 915],
        [386, 950], [386, 985], [386, 1020], [386, 1055], [386, 1090], [386, 1125], [386, 1160], [386, 1195],
        [386, 1230], [386, 1265], [421, 320], [421, 355], [421, 390], [421, 425], [421, 460], [421, 495], [421, 530],
        [421, 565], [421, 600], [421, 635], [421, 670], [421, 705], [421, 740], [421, 775], [421, 810], [421, 845],
        [421, 880], [421, 915], [421, 950], [421, 985], [421, 1020], [421, 1055], [421, 1090], [421, 1125], [421, 1160],
        [421, 1195], [421, 1230], [421, 1265], [456, 320], [456, 355], [456, 390], [456, 425], [456, 460], [456, 495],
        [456, 530], [456, 565], [456, 600], [456, 635], [456, 670], [456, 705], [456, 740], [456, 775], [456, 810],
        [456, 845], [456, 880], [456, 915], [456, 950], [456, 985], [456, 1020], [456, 1055], [456, 1090], [456, 1125],
        [456, 1160], [456, 1195], [456, 1230], [456, 1265]
    ]
    net_grid_x = []
    net_grid_y = []

    for i in range(0, len(net_2D)):
        net_grid_x.append(-net_2D[i][0])
        net_grid_y.append(-net_2D[i][1])

    plt.scatter(start, finish, s=area)
    plt.plot(grid_s, grid_f)
    plt.scatter(net_grid_x, net_grid_y)
    plt.show()


def start_paths():
    plt.xlim(0, 1000)
    plt.ylim(0, 1000)

    # x = [-100, -300, -200, -300, -200]
    # y = [-3700, -3900, -3800, -3800, -3700]

    x = [100, 300, 200, 300, 200]
    y = [300, 100, 200, 200, 300]
    area = 350
    plt.scatter(x, y, s=area, color='green')

    x = [400]
    y = [400]
    area = 1000
    plt.scatter(x, y, s=area, color='green')
    plt.show()

# start_paths()
path()
# grid_generator()
